import tkinter as tk
from tkinter import ttk
from berechnungen.lastenkombination import MethodeLastkombi
from PIL import Image, ImageTk


class LastkombiAnzeiger:
    def __init__(self, parent_frame, eingabemaske, db):
        self.parent = parent_frame
        # Imports
        self.eingabemaske = eingabemaske
        self.db = db
        self.kombi_berechnung = MethodeLastkombi(self.eingabemaske, self.db)
        # Lastenkombi Frame
        self.lastkombination_frame = ttk.LabelFrame(
            self.parent, text="Lastkombinationen", padding=10)
        self.lastkombination_frame.pack(
            fill="both", expand=True, padx=10, pady=10)

        # Frame für LaTeX-Textausgabe Lastkombi
        self.latex_frame_bemessungslast = ttk.Frame(self.lastkombination_frame)
        self.latex_frame_bemessungslast.pack(fill="both", expand=True)

        # Text-Widget
        self.text_widget = tk.Text(
            self.latex_frame_bemessungslast, wrap="word", height=20)
        self.text_widget.pack(fill="both", expand=True)

    def aktualisiere_darstellung(self):
        for widget in self.latex_frame_bemessungslast.winfo_children():
            widget.destroy()
        try:
            latex_kombis = self.kombi_berechnung.berechne_dynamische_lastkombination()

            if not latex_kombis:
                label = ttk.Label(self.latex_frame_bemessungslast,
                                  text="Keine gültigen Daten vorhanden.")
                label.pack()
                return

            # → Liste aus dict für Sortierung
            kombiliste = list(latex_kombis.items())

            if self.eingabemaske.anzeige_lastkombis.get() == 1:
                # Nur maßgebende Kombination (größter Wert)
                kombiliste = [item for item in latex_kombis.items()
                              if item[1].get("massgebend")]

            else:
                # Alle Kombinationen zeigen
                kombiliste = list(latex_kombis.items())

            for _, kombi in kombiliste:
                zeile = ttk.Frame(self.latex_frame_bemessungslast)
                zeile.pack(fill="x", anchor="w", pady=5)

                # Nur das gerenderte LaTeX-Bild anzeigen
                bild = self.kombi_berechnung.render_latex_to_image(
                    kombi["latex"])
                tk_bild = ImageTk.PhotoImage(bild)
                bild_label = tk.Label(zeile, image=tk_bild)
                bild_label.image = tk_bild  # Referenz speichern!
                bild_label.pack(side="left")

            # Nur die maßgebende Ed-Kombination (ohne kmod) anzeigen

        except Exception as e:
            error_label = ttk.Label(
                self.latex_frame_bemessungslast, text=f"⚠️ Fehler: {e}")
            error_label.pack()
